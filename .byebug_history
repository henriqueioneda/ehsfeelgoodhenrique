c
(self.cpu_usage * CPU_USAGE_MULTIPLIER + Payment.recent.where(payer: self).count * PAYER_USAGE_MULTIPLIER + Payment.recent.where(payee: self).count * PAYEE_USAGE_MULTIPLIER) * PRICE_MULTIPLIER
(self.cpu_usage * CPU_USAGE_MULTIPLIER + Payment.recent.where(payer: self).count * PAYER_USAGE_MULTIPLIER + Payment.recent.where(payee: self).count * PAYEE_USAGE_MULTIPLIER) * PRICE_MULTIPLIERs
c
(self.cpu_usage * CPU_USAGE_MULTIPLIER + Payment.recent.where(payer: self).count * PAYER_USAGE_MULTIPLIER + Payment.recent.where(payee: self).count * PAYEE_USAGE_MULTIPLIER) * PRICE_MULTIPLIER
c
   38:     + Payment.recent.where(payee: self).count * PAYEE_USAGE_MULTIPLIER) * PRICE_MULTIPLIER
   37:     + Payment.recent.where(payer: self).count * PAYER_USAGE_MULTIPLIER 
(self.cpu_usage * CPU_USAGE_MULTIPLIER  
Payment.recent.where(payer: self).count
self
self.cpu_usage
c
@payee
n
c
@payment.payer
@payment.payee
@payment
c
@payment
params
c
el
acc
c
m = Money.new(28900)
Money.new(28900).humanized_money_with_symbol
Money.new.humanized_money_with_symbol 
Money.new.humanized_money_with_symbol 2899
Money.new.humanized_money_with_symbol
Money.humanized_money_with_symbol
Money
payment.value
humanized_money_with_symbol
c
humanized_money_with_symbol
payment.value
c
@user.update_attributes(params.require(:user).permit(:acc_type))
params.require(:user).permit(:acc_type)
params.require(:user)
params
@user
c
previous_step
puts step
"fill_extra_information" == step
:fill_extra_information == step
:select_account_type == step
next_step
previous_step
steps
c
step
params
c
acc_types
c
User.acc_types[:client] == @user.acc_type
User.acc_types[:client]
User.acc_types
@user.integrator?
@user.client?
@user.acc_type
@user
c
next_wizard_path(user: {type:2})
next_wizard_path(user: {type:2}))
next_wizard_path(a:2)
next_wizard_path
next_wizard_step
c
controller_name
c
@user.persisted?
@user.acc_type
@user
c
params
c
params
